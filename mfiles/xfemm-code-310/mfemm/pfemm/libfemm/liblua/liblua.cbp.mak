#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../libfemm -I..
CFLAGS = -fPIC -std=gnu++0x
RESINC = 
LIBDIR = -L../libfemm -L..
LIB = 
LDFLAGS = -lfemm

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -Wall -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = lua.so

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -Wall -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = lua.so

OBJ_RELEASE = $(OBJDIR_RELEASE)/ltests.o $(OBJDIR_RELEASE)/lparser.o $(OBJDIR_RELEASE)/lstate.o $(OBJDIR_RELEASE)/lstring.o $(OBJDIR_RELEASE)/lstrlib.o $(OBJDIR_RELEASE)/ltable.o $(OBJDIR_RELEASE)/lobject.o $(OBJDIR_RELEASE)/ltm.o $(OBJDIR_RELEASE)/lundump.o $(OBJDIR_RELEASE)/lvm.o $(OBJDIR_RELEASE)/lzio.o $(OBJDIR_RELEASE)/lfunc.o $(OBJDIR_RELEASE)/lauxlib.o $(OBJDIR_RELEASE)/lbaselib.o $(OBJDIR_RELEASE)/lcode.o $(OBJDIR_RELEASE)/ldblib.o $(OBJDIR_RELEASE)/ldebug.o $(OBJDIR_RELEASE)/ldo.o $(OBJDIR_RELEASE)/lapi.o $(OBJDIR_RELEASE)/lgc.o $(OBJDIR_RELEASE)/liolib.o $(OBJDIR_RELEASE)/llex.o $(OBJDIR_RELEASE)/lmathlib.o $(OBJDIR_RELEASE)/lmem.o

OBJ_DEBUG = $(OBJDIR_DEBUG)/ltests.o $(OBJDIR_DEBUG)/lparser.o $(OBJDIR_DEBUG)/lstate.o $(OBJDIR_DEBUG)/lstring.o $(OBJDIR_DEBUG)/lstrlib.o $(OBJDIR_DEBUG)/ltable.o $(OBJDIR_DEBUG)/lobject.o $(OBJDIR_DEBUG)/ltm.o $(OBJDIR_DEBUG)/lundump.o $(OBJDIR_DEBUG)/lvm.o $(OBJDIR_DEBUG)/lzio.o $(OBJDIR_DEBUG)/lfunc.o $(OBJDIR_DEBUG)/lauxlib.o $(OBJDIR_DEBUG)/lbaselib.o $(OBJDIR_DEBUG)/lcode.o $(OBJDIR_DEBUG)/ldblib.o $(OBJDIR_DEBUG)/ldebug.o $(OBJDIR_DEBUG)/ldo.o $(OBJDIR_DEBUG)/lapi.o $(OBJDIR_DEBUG)/lgc.o $(OBJDIR_DEBUG)/liolib.o $(OBJDIR_DEBUG)/llex.o $(OBJDIR_DEBUG)/lmathlib.o $(OBJDIR_DEBUG)/lmem.o

all: release debug

clean: clean_release clean_debug

before_release: 
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LIBDIR_RELEASE) $(OBJ_RELEASE)  -o $(OUT_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/ltests.o: ltests.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ltests.cpp -o $(OBJDIR_RELEASE)/ltests.o

$(OBJDIR_RELEASE)/lparser.o: lparser.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lparser.cpp -o $(OBJDIR_RELEASE)/lparser.o

$(OBJDIR_RELEASE)/lstate.o: lstate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lstate.cpp -o $(OBJDIR_RELEASE)/lstate.o

$(OBJDIR_RELEASE)/lstring.o: lstring.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lstring.cpp -o $(OBJDIR_RELEASE)/lstring.o

$(OBJDIR_RELEASE)/lstrlib.o: lstrlib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lstrlib.cpp -o $(OBJDIR_RELEASE)/lstrlib.o

$(OBJDIR_RELEASE)/ltable.o: ltable.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ltable.cpp -o $(OBJDIR_RELEASE)/ltable.o

$(OBJDIR_RELEASE)/lobject.o: lobject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lobject.cpp -o $(OBJDIR_RELEASE)/lobject.o

$(OBJDIR_RELEASE)/ltm.o: ltm.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ltm.cpp -o $(OBJDIR_RELEASE)/ltm.o

$(OBJDIR_RELEASE)/lundump.o: lundump.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lundump.cpp -o $(OBJDIR_RELEASE)/lundump.o

$(OBJDIR_RELEASE)/lvm.o: lvm.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lvm.cpp -o $(OBJDIR_RELEASE)/lvm.o

$(OBJDIR_RELEASE)/lzio.o: lzio.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lzio.cpp -o $(OBJDIR_RELEASE)/lzio.o

$(OBJDIR_RELEASE)/lfunc.o: lfunc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lfunc.cpp -o $(OBJDIR_RELEASE)/lfunc.o

$(OBJDIR_RELEASE)/lauxlib.o: lauxlib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lauxlib.cpp -o $(OBJDIR_RELEASE)/lauxlib.o

$(OBJDIR_RELEASE)/lbaselib.o: lbaselib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lbaselib.cpp -o $(OBJDIR_RELEASE)/lbaselib.o

$(OBJDIR_RELEASE)/lcode.o: lcode.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lcode.cpp -o $(OBJDIR_RELEASE)/lcode.o

$(OBJDIR_RELEASE)/ldblib.o: ldblib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ldblib.cpp -o $(OBJDIR_RELEASE)/ldblib.o

$(OBJDIR_RELEASE)/ldebug.o: ldebug.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ldebug.cpp -o $(OBJDIR_RELEASE)/ldebug.o

$(OBJDIR_RELEASE)/ldo.o: ldo.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ldo.cpp -o $(OBJDIR_RELEASE)/ldo.o

$(OBJDIR_RELEASE)/lapi.o: lapi.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lapi.cpp -o $(OBJDIR_RELEASE)/lapi.o

$(OBJDIR_RELEASE)/lgc.o: lgc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lgc.cpp -o $(OBJDIR_RELEASE)/lgc.o

$(OBJDIR_RELEASE)/liolib.o: liolib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c liolib.cpp -o $(OBJDIR_RELEASE)/liolib.o

$(OBJDIR_RELEASE)/llex.o: llex.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c llex.cpp -o $(OBJDIR_RELEASE)/llex.o

$(OBJDIR_RELEASE)/lmathlib.o: lmathlib.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lmathlib.cpp -o $(OBJDIR_RELEASE)/lmathlib.o

$(OBJDIR_RELEASE)/lmem.o: lmem.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lmem.cpp -o $(OBJDIR_RELEASE)/lmem.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

before_debug: 
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) -shared $(LIBDIR_DEBUG) $(OBJ_DEBUG)  -o $(OUT_DEBUG) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/ltests.o: ltests.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ltests.cpp -o $(OBJDIR_DEBUG)/ltests.o

$(OBJDIR_DEBUG)/lparser.o: lparser.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lparser.cpp -o $(OBJDIR_DEBUG)/lparser.o

$(OBJDIR_DEBUG)/lstate.o: lstate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lstate.cpp -o $(OBJDIR_DEBUG)/lstate.o

$(OBJDIR_DEBUG)/lstring.o: lstring.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lstring.cpp -o $(OBJDIR_DEBUG)/lstring.o

$(OBJDIR_DEBUG)/lstrlib.o: lstrlib.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lstrlib.cpp -o $(OBJDIR_DEBUG)/lstrlib.o

$(OBJDIR_DEBUG)/ltable.o: ltable.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ltable.cpp -o $(OBJDIR_DEBUG)/ltable.o

$(OBJDIR_DEBUG)/lobject.o: lobject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lobject.cpp -o $(OBJDIR_DEBUG)/lobject.o

$(OBJDIR_DEBUG)/ltm.o: ltm.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ltm.cpp -o $(OBJDIR_DEBUG)/ltm.o

$(OBJDIR_DEBUG)/lundump.o: lundump.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lundump.cpp -o $(OBJDIR_DEBUG)/lundump.o

$(OBJDIR_DEBUG)/lvm.o: lvm.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lvm.cpp -o $(OBJDIR_DEBUG)/lvm.o

$(OBJDIR_DEBUG)/lzio.o: lzio.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lzio.cpp -o $(OBJDIR_DEBUG)/lzio.o

$(OBJDIR_DEBUG)/lfunc.o: lfunc.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lfunc.cpp -o $(OBJDIR_DEBUG)/lfunc.o

$(OBJDIR_DEBUG)/lauxlib.o: lauxlib.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lauxlib.cpp -o $(OBJDIR_DEBUG)/lauxlib.o

$(OBJDIR_DEBUG)/lbaselib.o: lbaselib.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lbaselib.cpp -o $(OBJDIR_DEBUG)/lbaselib.o

$(OBJDIR_DEBUG)/lcode.o: lcode.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lcode.cpp -o $(OBJDIR_DEBUG)/lcode.o

$(OBJDIR_DEBUG)/ldblib.o: ldblib.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ldblib.cpp -o $(OBJDIR_DEBUG)/ldblib.o

$(OBJDIR_DEBUG)/ldebug.o: ldebug.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ldebug.cpp -o $(OBJDIR_DEBUG)/ldebug.o

$(OBJDIR_DEBUG)/ldo.o: ldo.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ldo.cpp -o $(OBJDIR_DEBUG)/ldo.o

$(OBJDIR_DEBUG)/lapi.o: lapi.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lapi.cpp -o $(OBJDIR_DEBUG)/lapi.o

$(OBJDIR_DEBUG)/lgc.o: lgc.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lgc.cpp -o $(OBJDIR_DEBUG)/lgc.o

$(OBJDIR_DEBUG)/liolib.o: liolib.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c liolib.cpp -o $(OBJDIR_DEBUG)/liolib.o

$(OBJDIR_DEBUG)/llex.o: llex.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c llex.cpp -o $(OBJDIR_DEBUG)/llex.o

$(OBJDIR_DEBUG)/lmathlib.o: lmathlib.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lmathlib.cpp -o $(OBJDIR_DEBUG)/lmathlib.o

$(OBJDIR_DEBUG)/lmem.o: lmem.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lmem.cpp -o $(OBJDIR_DEBUG)/lmem.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf $(OBJDIR_DEBUG)

.PHONY: before_release after_release clean_release before_debug after_debug clean_debug

